// var chokidar = require('chokidar');

// var watcher = chokidar.watch(__dirname + '/files', {
// 	ignored: /^\..+$/, persistent: true
// });

// watcher
// 	.on('add', function (path) {
// 		console.log('Added: ' + path);
// 	})
// 	.on('change', function (path) {
// 		console.log('Changed: ' + path);
// 	})
// 	.on('unlink', function (path) {
// 		console.log('Remove: ' + path);
// 	});

var _ = require('underscore');
var less = require('less');
var chokidar = require('chokidar');
var fs = require('fs');

var settings = require('./settings');

function getLessCode() {
	var lessCode = '';
	if (!fs.existsSync(settings.inputDir)) { return ''; }
	if (fs.existsSync(settings.inputDir + '/main.less')) {
		lessCode = fs.readFileSync(settings.inputDir + '/main.less') + '';
	}
	_.each(fs.readdirSync(settings.inputDir), function (filename) {
		if (filename === 'main.less') { return; }
		var filename = settings.inputDir + '/' + filename;
		if (filename.slice(-5) !== '.less') { return; }
		lessCode += '\n' + fs.readFileSync(filename) + '';
	});
	return lessCode;
}

function compile(callback) {
	var lessCode = getLessCode();
	callback = callback || function () {};
	less.render(lessCode, { compress: true }, function (err, cssCode) {
		callback(cssCode);
	});
}

function watch(callback) {
	var watcher = chokidar.watch(settings.inputDir, {
		ignored: /^\..+$/,
		persistent: true
	});

	watcher.on('add', function (path) {
		callback(path);
	}).on('change', function (path) {
		callback(path);
	}).on('unlink', function (path) {
		callback(path);
	});
}

watch(function (path) {
	compile(function (cssCode) {
		fs.writeFileSync(settings.outputFile, cssCode);
	});
});